<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.toy.toy_petsitter_back.repository.PetSitRepository">
    <!-- 내 작성글 저장 -->
    <insert id="insertMyPost" parameterType="HashMap">
        INSERT INTO SITTER_POST (TITLE, CONTENT, PET_YN, PICKUP_YN, LARGE_DOG_YN, YARD_YN, OLD_DOG_YN, PRICE_LARGE, PRICE_MEDIUM,
                          PRICE_SMALL, USER_SEQ, REG_DATE, DELETE_YN)
        VALUES (#{title, jdbcType=VARCHAR}, #{content, jdbcType=VARCHAR}, #{petYn, jdbcType=VARCHAR}, #{pickupYn, jdbcType=VARCHAR},
                #{largeDogYn, jdbcType=VARCHAR}, #{yardYn, jdbcType=VARCHAR}, #{oldDogYn, jdbcType=VARCHAR}, #{priceLarge, jdbcType=INTEGER},
                #{priceMedium, jdbcType=INTEGER}, #{priceSmall, jdbcType=INTEGER}, #{userKey, jdbcType=INTEGER}, now(), 'N')
    </insert>

    <!-- 내 작성글 불러오기 -->
    <select id="getMyPost" resultType="HashMap" parameterType="Integer">
        SELECT * FROM SITTER_POST WHERE USER_SEQ = #{userKey, jdbcType=INTEGER} AND DELETE_YN='N'
    </select>

    <!-- 내 작성글 수정하기 -->
    <update id="updateMyPost">
        UPDATE SITTER_POST SET TITLE=#{title, jdbcType=VARCHAR}, CONTENT=#{content, jdbcType=VARCHAR}, PET_YN=#{petYn, jdbcType=VARCHAR}, PICKUP_YN=#{pickupYn, jdbcType=VARCHAR},
                               LARGE_DOG_YN=#{largeDogYn, jdbcType=VARCHAR}, YARD_YN=#{yardYn, jdbcType=VARCHAR}, OLD_DOG_YN=#{oldDogYn, jdbcType=VARCHAR},
                               PRICE_LARGE=#{priceLarge, jdbcType=INTEGER}, PRICE_MEDIUM=#{priceMedium, jdbcType=INTEGER}, PRICE_SMALL=#{priceSmall, jdbcType=INTEGER}, MODI_DATE= now() WHERE USER_SEQ =#{userKey}
    </update>

    <!-- 내 작성글 삭제-->
    <update id="deleteMyPost">
        UPDATE SITTER_POST SET DELETE_YN = 'Y' WHERE USER_SEQ = #{userSeq} AND DELETE_YN='N';
    </update>

    <!-- 게시글 리스트 가져오기 -->
    <select id="getPostList" resultType="HashMap">
        SELECT sp.petsit_seq, sp.title, sp.pet_yn, sp.pickup_yn, sp.large_dog_yn, sp.yard_yn, sp.old_dog_yn,
               sp.price_large, sp.price_medium, sp.price_small, sp.price_small_day, sp.reg_date, u.address, u.address_detail,
               (SELECT count(*) from REVIEW rv WHERE rv.petsit_seq = sp.petsit_seq) review_count
        FROM SITTER_POST sp
                 LEFT JOIN USER u
                           ON sp.user_seq = u.user_seq
        <where>
            u.user_status = 'U' AND u.post_yn = 'Y' AND sp.delete_yn='N'
            <if test="petYn != null"> AND sp.pet_yn = 'Y'</if>
            <if test="pickupYn != null"> AND sp.pickup_yn = 'Y'</if>
            <if test="largeDogYn != null"> AND sp.large_dog_yn = 'Y'</if>
            <if test="yardYn != null"> AND sp.yard_yn = 'Y'</if>
            <if test="oldDogYn != null"> AND sp.old_dog_yn = 'Y'</if>
            <if test="search != null"> AND u.address LIKE CONCAT ('%',#{search},'%')</if>
        </where>
        <choose>
            <when test="orderBy != null and orderBy.equals('popular')">
                ORDER BY review_count DESC
            </when>
            <when test="orderBy != null and orderBy.equals('price')">
                ORDER BY sp.price_small ASC
            </when>
            <otherwise>
                ORDER BY sp.reg_date DESC
            </otherwise>
        </choose>
        LIMIT #{pageStart}, #{perPageNum}
    </select>

    <!-- 게시글 총 갯수 가져오기 -->
    <select id="totalCount" resultType="Integer">
        SELECT count(*) FROM SITTER_POST sp LEFT JOIN USER u ON sp.user_seq = u.user_seq
        <where>
            sp.delete_yn='N'
            <if test="petYn != null"> AND sp.pet_yn = 'Y'</if>
            <if test="pickupYn != null"> AND sp.pickup_yn = 'Y'</if>
            <if test="largeDogYn != null"> AND sp.large_dog_yn = 'Y'</if>
            <if test="yardYn != null"> AND sp.yard_yn = 'Y'</if>
            <if test="oldDogYn != null"> AND sp.old_dog_yn = 'Y'</if>
            <if test="search != null"> AND u.address LIKE CONCAT ('%',#{search},'%')</if>
        </where>
    </select>

    <!-- 게시글 작성 상태 변경 -->
    <update id="updatePostStatus" >
        UPDATE USER SET POST_YN =#{postYn} WHERE USER_SEQ = #{userSeq}
    </update>

    <!-- 게시글 상세 페이지(예약 페이지) 불러오기-->
    <select id="getPostDetail" resultType="HashMap" parameterType="Integer">
        SELECT sp.petsit_seq, sp.title, sp.content, sp.pet_yn, sp.pickup_yn, sp.large_dog_yn, sp.yard_yn, sp.old_dog_yn,
               sp.price_large, sp.price_medium, sp.price_small, sp.price_large_day, sp.price_medium_day, sp.price_small_day,
               sp.reg_date, u.address, u.name
        FROM SITTER_POST sp
                 LEFT JOIN USER u ON sp.user_seq = u.user_seq
        WHERE sp.PETSIT_SEQ = #{petsitSeq}
    </select>

    <!-- 리뷰 리스트 불러오기 -->
    <select id="getReview" resultType="HashMap">
        SELECT rv.review_seq, rv.review_content, rv.review_date, rv.reservation_seq, u.email
        FROM REVIEW rv
                 LEFT JOIN USER u ON rv.user_seq = u.user_seq
        WHERE rv.PETSIT_SEQ = #{petsitSeq}
        ORDER BY petsit_seq LIMIT #{pageStart}, #{perPageNum}
    </select>

    <!-- 리뷰 총 갯수 가져오기 -->
    <select id="reviewTotalCount" parameterType="Integer" resultType="Integer">
        SELECT count(*) FROM REVIEW WHERE PETSIT_SEQ= #{petsitSeq};
    </select>

    <!-- 예약 요청 저장 -->
    <insert id="insertReservation" parameterType="HashMap">
        INSERT INTO RESERVATION (CHECK_IN, CHECK_OUT, RESERVATION_DATE, PRICE, RESERVATION_STATUS, PETSIT_SEQ, USER_SEQ, SITTER_SEQ,
                                 SMALL_DOG_CNT, MEDIUM_DOG_CNT, LARGE_DOG_CNT)
        VALUES (#{checkIn}, #{checkOut}, now(), #{price, jdbcType=INTEGER}, 'R', #{petSitSeq, jdbcType=INTEGER}, #{userSeq, jdbcType=INTEGER},
                #{sitterSeq, jdbcType=INTEGER}, #{smallCnt, jdbcType=INTEGER}, #{mediumCnt, jdbcType=INTEGER}, #{largeCnt, jdbcType=INTEGER})
    </insert>

    <!-- 시터 게시글을 작성한 시터seq(userSeq) 가져오기 -->
    <select id="selectSitterSeq" parameterType="Integer" resultType="Integer">
        SELECT user_seq FROM SITTER_POST WHERE PETSIT_SEQ=#{petSitSeq}
    </select>

    <!-- 예약 리스트 가져오기 -->
    <select id="getReservationList" resultType="HashMap">
        SELECT * FROM RESERVATION WHERE user_seq =#{userSeq} LIMIT #{pageStart}, #{perPageNum}
    </select>

    <!-- 총 예약 수 가져오기 -->
    <select id="totalReservationCount" resultType="Integer">
        SELECT count(*) FROM RESERVATION WHERE user_seq = #{userSeq}
    </select>

    <!-- 예약 내역 가져오기 -->
    <select id="getReservationInfo" resultType="HashMap" parameterType="Integer">
        SELECT rv.price, u.email, rv.reservation_seq, rv.reservation_status, rv.petsit_seq, rv.user_seq FROM RESERVATION rv
        LEFT JOIN USER u ON rv.user_seq = u.user_seq
        WHERE rv.reservation_seq =#{reservationSeq} AND rv.user_seq =#{userSeq}
    </select>

    <select id="getReservationInfoOnly" resultType="HashMap" parameterType="Integer">
        SELECT price, reservation_seq, reservation_status, petsit_seq, user_seq
        FROM RESERVATION
        WHERE reservation_seq =#{reservationSeq}
    </select>

    <!-- 결제하기 -->
    <insert id="insertPayment">
        INSERT INTO PAYMENT (RESERVATION_SEQ, PAYMENT_NAME, PAYMENT_AMOUNT, PAYMENT_TYPE, PAYMENT_DATE)
                VALUES (#{reservation_seq}, #{email}, #{price}, #{paymentType}, now())
    </insert>

    <!-- 예약 상태 변경 -->
    <update id="changeReservationStatus">
        UPDATE RESERVATION SET RESERVATION_STATUS =#{reservationStatus}, MODI_DATE=now() WHERE RESERVATION_SEQ =#{reservationSeq}
    </update>

    <!-- 환불 신청-->
    <update id="refund">
        UPDATE PAYMENT SET CANCEL_YN ='Y', CANCEL_DATE= now(), REFUND_YN ='N' WHERE RESERVATION_SEQ =#{reservationSeq}
    </update>

    <!-- 리뷰 작성 -->
    <insert id="review" parameterType="HashMap">
        INSERT INTO REVIEW (REVIEW_CONTENT, REVIEW_DATE, USER_SEQ, RESERVATION_SEQ, PETSIT_SEQ)
                VALUES (#{reviewContent}, now(), #{user_seq}, #{reservation_seq}, #{petsit_seq})
    </insert>

    <!-- 펫시터 예약 리스트 가져오기 -->
    <select id="getReservationManageList" resultType="HashMap">
        SELECT * FROM RESERVATION WHERE sitter_seq =#{sitterSeq} LIMIT #{pageStart}, #{perPageNum}
    </select>

    <!-- 펫시터 총 예약 수 가져오기 -->
    <select id="totalReservationManageCount" resultType="Integer">
        SELECT count(*) FROM RESERVATION WHERE sitter_seq = #{sitterSeq}
    </select>

</mapper>
